Pasted-You-are-an-expert-full-stack-AI-developer-Build-me-a-complete-AI-powered-appointment-scheduling--1754738348775_1754738348775.txt
You are an expert full‑stack AI developer.

Build me a complete AI-powered appointment scheduling website for a healthcare clinic.

Features & Flow:
1. Patient visits the homepage and sees a clean "Book Appointment" button.
2. Booking page contains fields: patient name, email, phone, preferred date, preferred time, doctor preference, and free-text "Reason for visit".
3. On submit, the form sends data via POST to an n8n Webhook endpoint.
4. The n8n workflow:
   a. Uses OpenAI API with the prompt:
      "You are an AI assistant for a healthcare clinic. The input will be a patient's appointment request with details like date, time, and doctor preference. Extract and return data in JSON with patientName, email, phone, requestedDate, requestedTime, doctorPreference, reasonForVisit."
   b. Checks AWS DynamoDB for matching doctor availability.
   c. If the slot is available, saves the appointment in DynamoDB.
   d. Sends confirmation email & SMS to the patient.
   e. Schedules two reminders (24 hours before & 1 hour before).
   f. Optionally triggers a voice confirmation using Vapi, Retell AI, or ElevenLabs.

Frontend Requirements:
- Use Next.js (latest version) with TailwindCSS for styling.
- Mobile-first, responsive UI.
- Pages: Homepage, Book Appointment Page, Confirmation Page.
- Confirmation page should show details returned from n8n.
- Display success/error messages based on n8n workflow response.

Backend Requirements:
- Node.js (Express) server for API endpoints beyond the n8n-triggered flow (e.g., fetch doctors list, view booked slots).
- Connect to AWS DynamoDB using AWS SDK.
- Environment variables for API keys (OpenAI, AWS, email/SMS provider).

Automation:
- Provide example n8n JSON workflow implementing the described flow.
- Document how to set up the n8n webhook and link it to the front‑end form.

Integration:
- In the frontend `.env`, store NEXT_PUBLIC_N8N_WEBHOOK_URL and use it for POST requests.
- In backend `.env`, store credentials for OpenAI and AWS.

Deliverables:
1. Complete Next.js frontend code.
2. Complete Node.js backend code with DynamoDB integration.
3. n8n workflow JSON with Webhook → OpenAI node → DynamoDB → Email/SMS → Wait → Reminder.
4. TailwindCSS custom design with clinic branding.
5. README.md explaining setup & deployment.

Goal:
A production‑ready, full‑stack healthcare AI Appointment Scheduler website fully integrated with AI and automation tools as described.